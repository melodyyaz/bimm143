---
title: "class06handsonworksheet"
format: pdf
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this 

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```


>Q1. Write a function grade() to determine an overall grade from a vector of student homework assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped. Your final function should be adquately explained with code comments and be able to work on an example class gradebook such as this one in CSV format: “https://tinyurl.com/gradeinput” [3pts]

```{r}
  mean(student1)   
```
```{r}
mean(student2)
```

```{r}
##skip over all values "NA" from vectors prior to calculating mean
mean(student2, na.rm=TRUE)
```
```{r}
#student 3 only completed one assignement, so their average grade is based off one individual grade; how can we calculate their avrage grade while taking into consideration the missing assignemnts? 

#replace all "NA" values with 0 

student3[is.na(student3)] <- 0

#calculate mean of vector with "NA"=0
mean(student3)
```

```{r}
#find positions in which vector has value "NA"
which(is.na(student2))
```

```{r}
#find which positions in student 3 vector are 0

which(student3==0)
```

It is time to work with new temp object (that I will call "x") so I don't screw up the original objects
```{r}
x <- student3
x[is.na(x)] <- 0
mean(x)
```

finally, we want to drop the lowest scored before calucalting the mean. This is equivalent to allowing the student to drop their worst score
```{r}
x<-student1
x
x[-which.min(x)]
```
We can use the -which function to exclude the lowest value:
```{r}
x<-student2
x
#replace NA values with 0
x[is.na(x)] <- 0
#Exclude the lowest score & calculate mean
mean(x[-which.min(x)])
```

cool! this is my working snippet tha I can turn into a function called 'grade()'

All fuction in R have 3 things:
1. name, in our case "grade"
2.input arguments, in our case the student's grade vector
3. body, this is our working snippet above 

```{r}
grade <- function(x)
{
#replace NA values with 0
x[is.na(x)] <- 0
#Exclude the lowest score & calculate mean
mean(x[-which.min(x)])
}
```

Read a gradebook from online:
```{r}
hw <- read.csv("https://tinyurl.com/gradeinput", row.names=1)
hw
```
we can use the apply fucntion to grade all the students in this class with our new grade fucntion
```{r}
?apply()
ans <- apply(hw,1, grade)
ans
```

>Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student
overall in the gradebook? [3pts]

```{r}
ans[which.max(ans)]
```

>Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained
the lowest scores overall? [2pts]

```{r}
ave.scores<- which.min(apply(hw, 2, mean, na.rm=TRUE))
tot.scores<- which.min(apply(hw, 2, sum, na.rm=TRUE))
ave.scores
tot.scores
```

>Q4. Optional Extension: From your analysis of the gradebook, which homework was most
predictive of overall score (i.e. highest correlation with average grade score)? [1pt]

```{r}
cor(hw$hw1, ans)
cor(hw$hw3, ans)
```

If I try on hw2, I get NA as there are missing assignments
```{r}
hw$hw2
cor(hw$hw2, ans)
```

I will mask all NA values to 0

```{r}
mask <- hw
mask[is.na(mask)] <- 0
mask
```

We can use the apply() function here on the columns of the hw and pass it in the overall scores for the class.
```{r}
apply(mask, 2, cor, y=ans)
```

